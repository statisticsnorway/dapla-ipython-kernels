# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python38:
      python.version: '3.8'
    displayName: 'Build Python library'

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      pip install pytest
      pip install pytest-cov
      pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
    displayName: 'Test with pytest'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

  - task: Release
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    displayName: "Make release and publish to PyPi"
    steps:
    - script: |
        pip install wheel twine
        make release-validate
      displayName: "Validate release before uploading to PyPi"

    # Authenticate Maven to Nexus using predefined Service Connections
    # (Project Settings->Pipelines->Service Connections)
    - task: TwineAuthenticate@1
      displayName: 'Twine Authenticate'
      condition: succeeded()
      inputs:
        pythonUploadServiceConnection: pypi-dapla

    - script: |
        make release
      condition: succeeded()
      displayName: "Release to PyPi"
